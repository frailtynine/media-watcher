services:
  api: &main_app
    build:
      context: .
      dockerfile: ./Dockerfile
    image: media-watcher-backend:${AI_NEWS_BOT_VERSION:-latest}
    restart: always
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    environment:
      MEDIA_WATCHER_HOST: 0.0.0.0
      MEDIA_WATCHER_DB_FILE: /app/data/media_watcher_verstka.db
      MEDIA_WATCHER_REDIS_HOST: media-watcher-redis
    volumes:
      - db-watcher:/app/data/

  frontend:
    build:
      context: ./ai_news_frontend
      dockerfile: Dockerfile
    image: media-watcher-frontend:${AI_NEWS_BOT_VERSION:-latest}
    restart: always
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8050

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "8050:80"
      - "8444:443"
    depends_on:
      - api
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    command: ["nginx", "-g", "daemon off;"]

  migrator:
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - .env
    image: media-watcher-migrate:${AI_NEWS_BOT_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    environment:
      MEDIA_WATCHER_DB_FILE: /app/data/media_watcher_verstka.db
    volumes:
      - db-watcher:/app/data/

  redis:
    image: redis:6.2-alpine
    hostname: "media-watcher-redis"
    restart: always
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5



volumes:
  db-watcher:
    name: db-watcher
